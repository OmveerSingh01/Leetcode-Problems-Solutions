/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public void reorderList(ListNode head) {
             if(head == null)    return;
        ListNode slow = head;
        ListNode fast = head;
        while(fast != null && fast.next !=null){
            slow = slow.next;
            fast = fast.next.next;
        }
        ListNode mid = slow;
        ListNode prev = null;
        ListNode curr = mid.next;
        mid.next = null;
        ListNode next;
        while(curr != null){
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        ListNode LH = head;
        ListNode RH = prev;
        ListNode nextL,nextR;
        while(LH != null && RH != null){
            nextL = LH.next;
            LH.next = RH;
            nextR = RH.next;
            if (nextL == null) break;
            RH.next = nextL;
            LH = nextL;
            RH = nextR;
        }
    }
}
